@model CLC.Models.CellGrid
<div id="status">
    @if (Model.Lose)
    {
        <h3 class="alert-danger">GAME OVER</h3>
    }
    else if (Model.Win)
    {
        <h3 class="alert-success">YOU WON</h3>
    }
</div>
<div class="minesweeper">
    @for (int y = 0; y < Model.Height; y++)
    {
        <div class="grid-row">
            @for (int x = 0; x < Model.Width; x++)
            {
                <button type="submit" name="cell" value="@x,@y"
                        @{
                            /*// class to determine how to display   */
                            /*// Display, if gameover*/
                            if (Model.Lose)
                            {
                                if (Model.Cells[x, y].Mine)
                                {
                                    @: class= "cell mine"
                                    @: disabled
                                }
                                @: class="cell cell-lose cell-adjacent-@Model.Cells[x, y].Adjacent"
                                @: disabled
                            } 
                            /*// display, if win*/
                            else if (Model.Win)
                            {
                                if (Model.Cells[x, y].Mine)
                                {
                                    @: class="cell mine"
                                    @: disabled
                                }
                                @: class="cell cell-win cell-adjacent-@Model.Cells[x, y].Adjacent"
                                @: disabled
                            } /* display if game continuing*/
                            else if (Model.Cells[x, y].Checked)
                            {
                                @: class="cell cell-checked cell-adjacent-@Model.Cells[x, y].Adjacent"
                                @: disabled
                            }
                            else
                            {
                                @: class="cell"
                            }
                        }>
                    <div class="symbol">
                        @if ((Model.Cells[x, y].Checked && Model.Cells[x, y].Adjacent > 0 && !Model.Cells[x, y].Mine)
                             || ((Model.Lose || Model.Win) && !Model.Cells[x, y].Mine))
                        {
                            <p>@Model.Cells[x, y].Adjacent</p>
                        }
                        else
                        {
                            <p>?</p>
                        }
                    </div>
                </button>
            }
        </div>
    }
</div>