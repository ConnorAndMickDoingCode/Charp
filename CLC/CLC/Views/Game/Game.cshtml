@model CLC.Services.Business.Game
@{
    ViewBag.Title = "Game";
    Layout = "~/Views/Shared/_DefaultLayout.cshtml";
}
<style>
    table {
        border-collapse: collapse;
        border-spacing: 0;
    }

    td, tr {
        padding: 0;
        margin: 0;
    }

    .grid-row { margin: 0; }

    .grid-cell { margin: 0; }

    .cell {
        background: #ddd;
        width: 50px;
        height: 50px;
        border: 2px solid #333;
        border-radius: 3px;
        margin: 0;
    }

    .mine {
        background: #f33;
        border-color: #c11;
    }

    .flag {
        background: #3f3;
        border-color: #1c1;
    }

    .cell-lose { border: 0; }

    .cell-win { border: 3px solid #5a5; }

    .cell-checked { border: 0; }

    .cell-adjacent-1 { background: #88e; }

    .cell-adjacent-2 { background: #8cc; }

    .cell-adjacent-3 { background: #8e8; }

    .cell-adjacent-4 { background: #cc8; }

    .cell-adjacent-5, cell-adjacent-6 { background: #e87 }

    .cell-adjacent-7, cell-adjacent-8 { background: #f64 }
</style>
<div>
    <div class="minesweeper">
        <div class="status">
            @if (Model.Lose)
            {
                <h3 class="alert-danger">GAME OVER</h3>
            }
            else if (Model.Win)
            {
                <h3 class="alert-success">YOU WON</h3>
            }
        </div>
        <table>
            @for (int y = 0; y < Model.Height; y++)
            {
                <tr class="grid-row">
                    @for (int x = 0; x < Model.Width; x++)
                    {
                        <td class="grid-cell">
                            @using (Html.BeginForm("Play", "Game"))
                            {
                                <button type="submit" name="cell" value="@x,@y"
                                        @{
                                            // class to determine how to display 

                                            if (Model.Lose)
                                            {
                                                if (Model.Cells[x, y].Mine)
                                                {
                                                    @: class="cell mine"
                                                    @: disabled
                                                }
                                                @: class="cell cell-lose cell-adjacent-@Model.Cells[x, y].Adjacent"
                                                @: disabled
                                            }
                                            else if (Model.Win)
                                            {
                                                if (Model.Cells[x, y].Mine)
                                                {
                                                    @: class="cell mine"
                                                    @: disabled
                                                }
                                                @: class="cell cell-win cell-adjacent-@Model.Cells[x, y].Adjacent"
                                                @: disabled
                                            }
                                            else if (Model.Cells[x, y].Checked)
                                            {
                                                @: class="cell cell-checked cell-adjacent-@Model.Cells[x, y].Adjacent"
                                                @: disabled
                                            }
                                            else
                                            {
                                                @: class="cell"
                                            }
                                        }>
                                    @if (Model.Cells[x, y].Checked && @Model.Cells[x, y].Adjacent > 0)
                                    {
                                        @Model.Cells[x, y].Adjacent
                                    }
                                    else
                                    {
                                    }
                                </button>
                            }
                        </td>
                    }
                </tr>
            }
        </table>
    </div>
</div>